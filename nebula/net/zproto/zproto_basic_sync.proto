/*
 *  Copyright (c) 2016, https://github.com/zhatalk
 *  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package zproto;

option java_package = "com.nebula.net.zproto";
option java_outer_classname = "ZProtoBasicSync";
option optimize_for = CODE_SIZE;

message RpcRequest {
  // HEADER = 0x01
  // ID of API Method Request
  int32 method_id = 1;
  // Encoded Request
  bytes body = 2;
}

// Successful RPC
message RpcOk {
  // HEADER = 0x01
  // ID of API Method Response
  int32 method_response_id = 1;
  // Encoded response
  bytes body = 2;
}

// RPC Error
message RpcError {
  // HEADER = 0x02
  // Error Code like HTTP Error code
  int32 error_code = 1;
  // Error Tag like "ACCESS_DENIED"
  string error_tag = 2;
  // User visible error
  string user_message = 3;
  // Can user try again
  bool can_try_again = 4;
  // Some additional data of error
  bytes error_data = 5;
}

// RPC Flood Control.
// Client need to repeat request after delay
message RpcFloodWait {
  // HEADER = 0x03
  // Repeat delay on seconds
  int32 delay = 1;
}

// Internal Server Error
// Client may try to resend message
message RpcInternalError {
  // HEADER = 0x04
  bool can_try_again = 1;
  int32 try_again_delay = 2;
}

message Push {
  // Push Entity Id
  int32 update_id = 1;
  // Encoded Push body
  bytes body = 2;
}
