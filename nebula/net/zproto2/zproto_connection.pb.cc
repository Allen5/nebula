// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zproto_connection.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zproto_connection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* Frame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Frame_reflection_ = NULL;
const ::google::protobuf::Descriptor* Ping_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Ping_reflection_ = NULL;
const ::google::protobuf::Descriptor* Pong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Pong_reflection_ = NULL;
const ::google::protobuf::Descriptor* Drop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Drop_reflection_ = NULL;
const ::google::protobuf::Descriptor* Redirect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Redirect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* Handshake_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Handshake_reflection_ = NULL;
const ::google::protobuf::Descriptor* HandshakeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HandshakeResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_zproto_5fconnection_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_zproto_5fconnection_2eproto() {
  protobuf_AddDesc_zproto_5fconnection_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "zproto_connection.proto");
  GOOGLE_CHECK(file != NULL);
  Frame_descriptor_ = file->message_type(0);
  static const int Frame_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, package_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, crc32_),
  };
  Frame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Frame_descriptor_,
      Frame::default_instance_,
      Frame_offsets_,
      -1,
      -1,
      -1,
      sizeof(Frame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, _is_default_instance_));
  Ping_descriptor_ = file->message_type(1);
  static const int Ping_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ping, random_bytes_),
  };
  Ping_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Ping_descriptor_,
      Ping::default_instance_,
      Ping_offsets_,
      -1,
      -1,
      -1,
      sizeof(Ping),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ping, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ping, _is_default_instance_));
  Pong_descriptor_ = file->message_type(2);
  static const int Pong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong, random_bytes_),
  };
  Pong_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Pong_descriptor_,
      Pong::default_instance_,
      Pong_offsets_,
      -1,
      -1,
      -1,
      sizeof(Pong),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong, _is_default_instance_));
  Drop_descriptor_ = file->message_type(3);
  static const int Drop_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Drop, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Drop, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Drop, error_message_),
  };
  Drop_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Drop_descriptor_,
      Drop::default_instance_,
      Drop_offsets_,
      -1,
      -1,
      -1,
      sizeof(Drop),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Drop, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Drop, _is_default_instance_));
  Redirect_descriptor_ = file->message_type(4);
  static const int Redirect_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Redirect, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Redirect, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Redirect, timeout_),
  };
  Redirect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Redirect_descriptor_,
      Redirect::default_instance_,
      Redirect_offsets_,
      -1,
      -1,
      -1,
      sizeof(Redirect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Redirect, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Redirect, _is_default_instance_));
  Ack_descriptor_ = file->message_type(5);
  static const int Ack_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ack, received_aackage_index_),
  };
  Ack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Ack_descriptor_,
      Ack::default_instance_,
      Ack_offsets_,
      -1,
      -1,
      -1,
      sizeof(Ack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ack, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ack, _is_default_instance_));
  Handshake_descriptor_ = file->message_type(6);
  static const int Handshake_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handshake, proto_revision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handshake, api_major_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handshake, api_minor_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handshake, random_bytes_),
  };
  Handshake_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Handshake_descriptor_,
      Handshake::default_instance_,
      Handshake_offsets_,
      -1,
      -1,
      -1,
      sizeof(Handshake),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handshake, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handshake, _is_default_instance_));
  HandshakeResponse_descriptor_ = file->message_type(7);
  static const int HandshakeResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, proto_revision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, api_major_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, api_minor_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, sha1_),
  };
  HandshakeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HandshakeResponse_descriptor_,
      HandshakeResponse::default_instance_,
      HandshakeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(HandshakeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_zproto_5fconnection_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Frame_descriptor_, &Frame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Ping_descriptor_, &Ping::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Pong_descriptor_, &Pong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Drop_descriptor_, &Drop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Redirect_descriptor_, &Redirect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Ack_descriptor_, &Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Handshake_descriptor_, &Handshake::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HandshakeResponse_descriptor_, &HandshakeResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_zproto_5fconnection_2eproto() {
  delete Frame::default_instance_;
  delete Frame_reflection_;
  delete Ping::default_instance_;
  delete Ping_reflection_;
  delete Pong::default_instance_;
  delete Pong_reflection_;
  delete Drop::default_instance_;
  delete Drop_reflection_;
  delete Redirect::default_instance_;
  delete Redirect_reflection_;
  delete Ack::default_instance_;
  delete Ack_reflection_;
  delete Handshake::default_instance_;
  delete Handshake_reflection_;
  delete HandshakeResponse::default_instance_;
  delete HandshakeResponse_reflection_;
}

void protobuf_AddDesc_zproto_5fconnection_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_zproto_5fconnection_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027zproto_connection.proto\022\006zproto\"K\n\005Fra"
    "me\022\025\n\rpackage_index\030\001 \001(\005\022\016\n\006header\030\002 \001("
    "\005\022\014\n\004body\030\003 \001(\014\022\r\n\005crc32\030\004 \001(\005\"\034\n\004Ping\022\024"
    "\n\014random_bytes\030\001 \001(\014\"\034\n\004Pong\022\024\n\014random_b"
    "ytes\030\001 \001(\014\"E\n\004Drop\022\022\n\nmessage_id\030\001 \001(\003\022\022"
    "\n\nerror_code\030\002 \001(\005\022\025\n\rerror_message\030\003 \001("
    "\t\"7\n\010Redirect\022\014\n\004host\030\001 \001(\t\022\014\n\004port\030\002 \001("
    "\005\022\017\n\007timeout\030\003 \001(\005\"%\n\003Ack\022\036\n\026received_aa"
    "ckage_index\030\001 \001(\005\"o\n\tHandshake\022\026\n\016proto_"
    "revision\030\001 \001(\005\022\031\n\021api_major_version\030\002 \001("
    "\005\022\031\n\021api_minor_version\030\003 \001(\005\022\024\n\014random_b"
    "ytes\030\004 \001(\014\"o\n\021HandshakeResponse\022\026\n\016proto"
    "_revision\030\001 \001(\005\022\031\n\021api_major_version\030\002 \001"
    "(\005\022\031\n\021api_minor_version\030\003 \001(\005\022\014\n\004sha1\030\004 "
    "\001(\014B+\n\025com.nebula.net.zprotoB\020ZProtoConn"
    "ectionH\002b\006proto3", 616);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zproto_connection.proto", &protobuf_RegisterTypes);
  Frame::default_instance_ = new Frame();
  Ping::default_instance_ = new Ping();
  Pong::default_instance_ = new Pong();
  Drop::default_instance_ = new Drop();
  Redirect::default_instance_ = new Redirect();
  Ack::default_instance_ = new Ack();
  Handshake::default_instance_ = new Handshake();
  HandshakeResponse::default_instance_ = new HandshakeResponse();
  Frame::default_instance_->InitAsDefaultInstance();
  Ping::default_instance_->InitAsDefaultInstance();
  Pong::default_instance_->InitAsDefaultInstance();
  Drop::default_instance_->InitAsDefaultInstance();
  Redirect::default_instance_->InitAsDefaultInstance();
  Ack::default_instance_->InitAsDefaultInstance();
  Handshake::default_instance_->InitAsDefaultInstance();
  HandshakeResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_zproto_5fconnection_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_zproto_5fconnection_2eproto {
  StaticDescriptorInitializer_zproto_5fconnection_2eproto() {
    protobuf_AddDesc_zproto_5fconnection_2eproto();
  }
} static_descriptor_initializer_zproto_5fconnection_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Frame::kPackageIndexFieldNumber;
const int Frame::kHeaderFieldNumber;
const int Frame::kBodyFieldNumber;
const int Frame::kCrc32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Frame::Frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Frame)
}

void Frame::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Frame::Frame(const Frame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Frame)
}

void Frame::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  package_index_ = 0;
  header_ = 0;
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crc32_ = 0;
}

Frame::~Frame() {
  // @@protoc_insertion_point(destructor:zproto.Frame)
  SharedDtor();
}

void Frame::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Frame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Frame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Frame_descriptor_;
}

const Frame& Frame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zproto_5fconnection_2eproto();
  return *default_instance_;
}

Frame* Frame::default_instance_ = NULL;

Frame* Frame::New(::google::protobuf::Arena* arena) const {
  Frame* n = new Frame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Frame::Swap(Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Frame::InternalSwap(Frame* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Frame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Frame_descriptor_;
  metadata.reflection = Frame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Frame

// optional int32 package_index = 1;
void Frame::clear_package_index() {
  package_index_ = 0;
}
 ::google::protobuf::int32 Frame::package_index() const {
  // @@protoc_insertion_point(field_get:zproto.Frame.package_index)
  return package_index_;
}
 void Frame::set_package_index(::google::protobuf::int32 value) {
  
  package_index_ = value;
  // @@protoc_insertion_point(field_set:zproto.Frame.package_index)
}

// optional int32 header = 2;
void Frame::clear_header() {
  header_ = 0;
}
 ::google::protobuf::int32 Frame::header() const {
  // @@protoc_insertion_point(field_get:zproto.Frame.header)
  return header_;
}
 void Frame::set_header(::google::protobuf::int32 value) {
  
  header_ = value;
  // @@protoc_insertion_point(field_set:zproto.Frame.header)
}

// optional bytes body = 3;
void Frame::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Frame::body() const {
  // @@protoc_insertion_point(field_get:zproto.Frame.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Frame::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Frame.body)
}
 void Frame::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Frame.body)
}
 void Frame::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Frame.body)
}
 ::std::string* Frame::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Frame.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Frame::release_body() {
  // @@protoc_insertion_point(field_release:zproto.Frame.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Frame::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:zproto.Frame.body)
}

// optional int32 crc32 = 4;
void Frame::clear_crc32() {
  crc32_ = 0;
}
 ::google::protobuf::int32 Frame::crc32() const {
  // @@protoc_insertion_point(field_get:zproto.Frame.crc32)
  return crc32_;
}
 void Frame::set_crc32(::google::protobuf::int32 value) {
  
  crc32_ = value;
  // @@protoc_insertion_point(field_set:zproto.Frame.crc32)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ping::kRandomBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Ping)
}

void Ping::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Ping)
}

void Ping::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  random_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:zproto.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
  random_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ping::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Ping_descriptor_;
}

const Ping& Ping::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zproto_5fconnection_2eproto();
  return *default_instance_;
}

Ping* Ping::default_instance_ = NULL;

Ping* Ping::New(::google::protobuf::Arena* arena) const {
  Ping* n = new Ping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Ping_descriptor_;
  metadata.reflection = Ping_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Ping

// optional bytes random_bytes = 1;
void Ping::clear_random_bytes() {
  random_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Ping::random_bytes() const {
  // @@protoc_insertion_point(field_get:zproto.Ping.random_bytes)
  return random_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Ping::set_random_bytes(const ::std::string& value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Ping.random_bytes)
}
 void Ping::set_random_bytes(const char* value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Ping.random_bytes)
}
 void Ping::set_random_bytes(const void* value, size_t size) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Ping.random_bytes)
}
 ::std::string* Ping::mutable_random_bytes() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Ping.random_bytes)
  return random_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Ping::release_random_bytes() {
  // @@protoc_insertion_point(field_release:zproto.Ping.random_bytes)
  
  return random_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Ping::set_allocated_random_bytes(::std::string* random_bytes) {
  if (random_bytes != NULL) {
    
  } else {
    
  }
  random_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), random_bytes);
  // @@protoc_insertion_point(field_set_allocated:zproto.Ping.random_bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pong::kRandomBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pong::Pong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Pong)
}

void Pong::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Pong::Pong(const Pong& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Pong)
}

void Pong::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  random_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Pong::~Pong() {
  // @@protoc_insertion_point(destructor:zproto.Pong)
  SharedDtor();
}

void Pong::SharedDtor() {
  random_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Pong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Pong_descriptor_;
}

const Pong& Pong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zproto_5fconnection_2eproto();
  return *default_instance_;
}

Pong* Pong::default_instance_ = NULL;

Pong* Pong::New(::google::protobuf::Arena* arena) const {
  Pong* n = new Pong;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pong::Swap(Pong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pong::InternalSwap(Pong* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Pong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Pong_descriptor_;
  metadata.reflection = Pong_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pong

// optional bytes random_bytes = 1;
void Pong::clear_random_bytes() {
  random_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Pong::random_bytes() const {
  // @@protoc_insertion_point(field_get:zproto.Pong.random_bytes)
  return random_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Pong::set_random_bytes(const ::std::string& value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Pong.random_bytes)
}
 void Pong::set_random_bytes(const char* value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Pong.random_bytes)
}
 void Pong::set_random_bytes(const void* value, size_t size) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Pong.random_bytes)
}
 ::std::string* Pong::mutable_random_bytes() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Pong.random_bytes)
  return random_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Pong::release_random_bytes() {
  // @@protoc_insertion_point(field_release:zproto.Pong.random_bytes)
  
  return random_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Pong::set_allocated_random_bytes(::std::string* random_bytes) {
  if (random_bytes != NULL) {
    
  } else {
    
  }
  random_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), random_bytes);
  // @@protoc_insertion_point(field_set_allocated:zproto.Pong.random_bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Drop::kMessageIdFieldNumber;
const int Drop::kErrorCodeFieldNumber;
const int Drop::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Drop::Drop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Drop)
}

void Drop::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Drop::Drop(const Drop& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Drop)
}

void Drop::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_id_ = GOOGLE_LONGLONG(0);
  error_code_ = 0;
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Drop::~Drop() {
  // @@protoc_insertion_point(destructor:zproto.Drop)
  SharedDtor();
}

void Drop::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Drop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Drop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Drop_descriptor_;
}

const Drop& Drop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zproto_5fconnection_2eproto();
  return *default_instance_;
}

Drop* Drop::default_instance_ = NULL;

Drop* Drop::New(::google::protobuf::Arena* arena) const {
  Drop* n = new Drop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Drop::Swap(Drop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Drop::InternalSwap(Drop* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Drop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Drop_descriptor_;
  metadata.reflection = Drop_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Drop

// optional int64 message_id = 1;
void Drop::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Drop::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.Drop.message_id)
  return message_id_;
}
 void Drop::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.Drop.message_id)
}

// optional int32 error_code = 2;
void Drop::clear_error_code() {
  error_code_ = 0;
}
 ::google::protobuf::int32 Drop::error_code() const {
  // @@protoc_insertion_point(field_get:zproto.Drop.error_code)
  return error_code_;
}
 void Drop::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:zproto.Drop.error_code)
}

// optional string error_message = 3;
void Drop::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Drop::error_message() const {
  // @@protoc_insertion_point(field_get:zproto.Drop.error_message)
  return error_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Drop::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Drop.error_message)
}
 void Drop::set_error_message(const char* value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Drop.error_message)
}
 void Drop::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Drop.error_message)
}
 ::std::string* Drop::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Drop.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Drop::release_error_message() {
  // @@protoc_insertion_point(field_release:zproto.Drop.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Drop::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:zproto.Drop.error_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Redirect::kHostFieldNumber;
const int Redirect::kPortFieldNumber;
const int Redirect::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Redirect::Redirect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Redirect)
}

void Redirect::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Redirect::Redirect(const Redirect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Redirect)
}

void Redirect::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  timeout_ = 0;
}

Redirect::~Redirect() {
  // @@protoc_insertion_point(destructor:zproto.Redirect)
  SharedDtor();
}

void Redirect::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Redirect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Redirect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Redirect_descriptor_;
}

const Redirect& Redirect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zproto_5fconnection_2eproto();
  return *default_instance_;
}

Redirect* Redirect::default_instance_ = NULL;

Redirect* Redirect::New(::google::protobuf::Arena* arena) const {
  Redirect* n = new Redirect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Redirect::Swap(Redirect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Redirect::InternalSwap(Redirect* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Redirect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Redirect_descriptor_;
  metadata.reflection = Redirect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Redirect

// optional string host = 1;
void Redirect::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Redirect::host() const {
  // @@protoc_insertion_point(field_get:zproto.Redirect.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Redirect::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Redirect.host)
}
 void Redirect::set_host(const char* value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Redirect.host)
}
 void Redirect::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Redirect.host)
}
 ::std::string* Redirect::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Redirect.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Redirect::release_host() {
  // @@protoc_insertion_point(field_release:zproto.Redirect.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Redirect::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:zproto.Redirect.host)
}

// optional int32 port = 2;
void Redirect::clear_port() {
  port_ = 0;
}
 ::google::protobuf::int32 Redirect::port() const {
  // @@protoc_insertion_point(field_get:zproto.Redirect.port)
  return port_;
}
 void Redirect::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:zproto.Redirect.port)
}

// optional int32 timeout = 3;
void Redirect::clear_timeout() {
  timeout_ = 0;
}
 ::google::protobuf::int32 Redirect::timeout() const {
  // @@protoc_insertion_point(field_get:zproto.Redirect.timeout)
  return timeout_;
}
 void Redirect::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:zproto.Redirect.timeout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ack::kReceivedAackageIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ack::Ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Ack)
}

void Ack::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Ack::Ack(const Ack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Ack)
}

void Ack::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  received_aackage_index_ = 0;
}

Ack::~Ack() {
  // @@protoc_insertion_point(destructor:zproto.Ack)
  SharedDtor();
}

void Ack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Ack_descriptor_;
}

const Ack& Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zproto_5fconnection_2eproto();
  return *default_instance_;
}

Ack* Ack::default_instance_ = NULL;

Ack* Ack::New(::google::protobuf::Arena* arena) const {
  Ack* n = new Ack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ack::Swap(Ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ack::InternalSwap(Ack* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Ack_descriptor_;
  metadata.reflection = Ack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Ack

// optional int32 received_aackage_index = 1;
void Ack::clear_received_aackage_index() {
  received_aackage_index_ = 0;
}
 ::google::protobuf::int32 Ack::received_aackage_index() const {
  // @@protoc_insertion_point(field_get:zproto.Ack.received_aackage_index)
  return received_aackage_index_;
}
 void Ack::set_received_aackage_index(::google::protobuf::int32 value) {
  
  received_aackage_index_ = value;
  // @@protoc_insertion_point(field_set:zproto.Ack.received_aackage_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Handshake::kProtoRevisionFieldNumber;
const int Handshake::kApiMajorVersionFieldNumber;
const int Handshake::kApiMinorVersionFieldNumber;
const int Handshake::kRandomBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Handshake::Handshake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Handshake)
}

void Handshake::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Handshake::Handshake(const Handshake& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Handshake)
}

void Handshake::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  proto_revision_ = 0;
  api_major_version_ = 0;
  api_minor_version_ = 0;
  random_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Handshake::~Handshake() {
  // @@protoc_insertion_point(destructor:zproto.Handshake)
  SharedDtor();
}

void Handshake::SharedDtor() {
  random_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Handshake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Handshake::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Handshake_descriptor_;
}

const Handshake& Handshake::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zproto_5fconnection_2eproto();
  return *default_instance_;
}

Handshake* Handshake::default_instance_ = NULL;

Handshake* Handshake::New(::google::protobuf::Arena* arena) const {
  Handshake* n = new Handshake;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Handshake::Swap(Handshake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Handshake::InternalSwap(Handshake* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Handshake::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Handshake_descriptor_;
  metadata.reflection = Handshake_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Handshake

// optional int32 proto_revision = 1;
void Handshake::clear_proto_revision() {
  proto_revision_ = 0;
}
 ::google::protobuf::int32 Handshake::proto_revision() const {
  // @@protoc_insertion_point(field_get:zproto.Handshake.proto_revision)
  return proto_revision_;
}
 void Handshake::set_proto_revision(::google::protobuf::int32 value) {
  
  proto_revision_ = value;
  // @@protoc_insertion_point(field_set:zproto.Handshake.proto_revision)
}

// optional int32 api_major_version = 2;
void Handshake::clear_api_major_version() {
  api_major_version_ = 0;
}
 ::google::protobuf::int32 Handshake::api_major_version() const {
  // @@protoc_insertion_point(field_get:zproto.Handshake.api_major_version)
  return api_major_version_;
}
 void Handshake::set_api_major_version(::google::protobuf::int32 value) {
  
  api_major_version_ = value;
  // @@protoc_insertion_point(field_set:zproto.Handshake.api_major_version)
}

// optional int32 api_minor_version = 3;
void Handshake::clear_api_minor_version() {
  api_minor_version_ = 0;
}
 ::google::protobuf::int32 Handshake::api_minor_version() const {
  // @@protoc_insertion_point(field_get:zproto.Handshake.api_minor_version)
  return api_minor_version_;
}
 void Handshake::set_api_minor_version(::google::protobuf::int32 value) {
  
  api_minor_version_ = value;
  // @@protoc_insertion_point(field_set:zproto.Handshake.api_minor_version)
}

// optional bytes random_bytes = 4;
void Handshake::clear_random_bytes() {
  random_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Handshake::random_bytes() const {
  // @@protoc_insertion_point(field_get:zproto.Handshake.random_bytes)
  return random_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Handshake::set_random_bytes(const ::std::string& value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Handshake.random_bytes)
}
 void Handshake::set_random_bytes(const char* value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Handshake.random_bytes)
}
 void Handshake::set_random_bytes(const void* value, size_t size) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Handshake.random_bytes)
}
 ::std::string* Handshake::mutable_random_bytes() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Handshake.random_bytes)
  return random_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Handshake::release_random_bytes() {
  // @@protoc_insertion_point(field_release:zproto.Handshake.random_bytes)
  
  return random_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Handshake::set_allocated_random_bytes(::std::string* random_bytes) {
  if (random_bytes != NULL) {
    
  } else {
    
  }
  random_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), random_bytes);
  // @@protoc_insertion_point(field_set_allocated:zproto.Handshake.random_bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandshakeResponse::kProtoRevisionFieldNumber;
const int HandshakeResponse::kApiMajorVersionFieldNumber;
const int HandshakeResponse::kApiMinorVersionFieldNumber;
const int HandshakeResponse::kSha1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandshakeResponse::HandshakeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.HandshakeResponse)
}

void HandshakeResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HandshakeResponse::HandshakeResponse(const HandshakeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.HandshakeResponse)
}

void HandshakeResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  proto_revision_ = 0;
  api_major_version_ = 0;
  api_minor_version_ = 0;
  sha1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HandshakeResponse::~HandshakeResponse() {
  // @@protoc_insertion_point(destructor:zproto.HandshakeResponse)
  SharedDtor();
}

void HandshakeResponse::SharedDtor() {
  sha1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HandshakeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandshakeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HandshakeResponse_descriptor_;
}

const HandshakeResponse& HandshakeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_zproto_5fconnection_2eproto();
  return *default_instance_;
}

HandshakeResponse* HandshakeResponse::default_instance_ = NULL;

HandshakeResponse* HandshakeResponse::New(::google::protobuf::Arena* arena) const {
  HandshakeResponse* n = new HandshakeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HandshakeResponse::Swap(HandshakeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandshakeResponse::InternalSwap(HandshakeResponse* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata HandshakeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HandshakeResponse_descriptor_;
  metadata.reflection = HandshakeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HandshakeResponse

// optional int32 proto_revision = 1;
void HandshakeResponse::clear_proto_revision() {
  proto_revision_ = 0;
}
 ::google::protobuf::int32 HandshakeResponse::proto_revision() const {
  // @@protoc_insertion_point(field_get:zproto.HandshakeResponse.proto_revision)
  return proto_revision_;
}
 void HandshakeResponse::set_proto_revision(::google::protobuf::int32 value) {
  
  proto_revision_ = value;
  // @@protoc_insertion_point(field_set:zproto.HandshakeResponse.proto_revision)
}

// optional int32 api_major_version = 2;
void HandshakeResponse::clear_api_major_version() {
  api_major_version_ = 0;
}
 ::google::protobuf::int32 HandshakeResponse::api_major_version() const {
  // @@protoc_insertion_point(field_get:zproto.HandshakeResponse.api_major_version)
  return api_major_version_;
}
 void HandshakeResponse::set_api_major_version(::google::protobuf::int32 value) {
  
  api_major_version_ = value;
  // @@protoc_insertion_point(field_set:zproto.HandshakeResponse.api_major_version)
}

// optional int32 api_minor_version = 3;
void HandshakeResponse::clear_api_minor_version() {
  api_minor_version_ = 0;
}
 ::google::protobuf::int32 HandshakeResponse::api_minor_version() const {
  // @@protoc_insertion_point(field_get:zproto.HandshakeResponse.api_minor_version)
  return api_minor_version_;
}
 void HandshakeResponse::set_api_minor_version(::google::protobuf::int32 value) {
  
  api_minor_version_ = value;
  // @@protoc_insertion_point(field_set:zproto.HandshakeResponse.api_minor_version)
}

// optional bytes sha1 = 4;
void HandshakeResponse::clear_sha1() {
  sha1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HandshakeResponse::sha1() const {
  // @@protoc_insertion_point(field_get:zproto.HandshakeResponse.sha1)
  return sha1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HandshakeResponse::set_sha1(const ::std::string& value) {
  
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.HandshakeResponse.sha1)
}
 void HandshakeResponse::set_sha1(const char* value) {
  
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.HandshakeResponse.sha1)
}
 void HandshakeResponse::set_sha1(const void* value, size_t size) {
  
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.HandshakeResponse.sha1)
}
 ::std::string* HandshakeResponse::mutable_sha1() {
  
  // @@protoc_insertion_point(field_mutable:zproto.HandshakeResponse.sha1)
  return sha1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HandshakeResponse::release_sha1() {
  // @@protoc_insertion_point(field_release:zproto.HandshakeResponse.sha1)
  
  return sha1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HandshakeResponse::set_allocated_sha1(::std::string* sha1) {
  if (sha1 != NULL) {
    
  } else {
    
  }
  sha1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha1);
  // @@protoc_insertion_point(field_set_allocated:zproto.HandshakeResponse.sha1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
