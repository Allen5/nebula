// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zproto_transport.proto

#ifndef PROTOBUF_zproto_5ftransport_2eproto__INCLUDED
#define PROTOBUF_zproto_5ftransport_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace zproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_zproto_5ftransport_2eproto();
void protobuf_AssignDesc_zproto_5ftransport_2eproto();
void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

class Container;
class Drop;
class EncryptedMessage;
class MessageAck;
class NewSession;
class Package;
class PlainTextMessage;
class ProtoPush;
class ProtoRpcRequest;
class ProtoRpcResponse;
class RequestAuthId;
class RequestDH;
class RequestGetServerKey;
class RequestResend;
class RequestStartAuth;
class ResponseAuthId;
class ResponseDoDH;
class ResponseGetServerKey;
class ResponseStartAuth;
class SessionHello;
class SessionLost;
class UnsentMessage;
class UnsentResponse;

// ===================================================================

class Package : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Package) */ {
 public:
  Package();
  virtual ~Package();

  Package(const Package& from);

  inline Package& operator=(const Package& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Package& default_instance();

  void Swap(Package* other);

  // implements Message ----------------------------------------------

  inline Package* New() const { return New(NULL); }

  Package* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Package& from);
  void MergeFrom(const Package& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Package* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 auth_id = 1;
  void clear_auth_id();
  static const int kAuthIdFieldNumber = 1;
  ::google::protobuf::int64 auth_id() const;
  void set_auth_id(::google::protobuf::int64 value);

  // optional int64 session_id = 2;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::int64 session_id() const;
  void set_session_id(::google::protobuf::int64 value);

  // optional int32 message_header = 3;
  void clear_message_header();
  static const int kMessageHeaderFieldNumber = 3;
  ::google::protobuf::int32 message_header() const;
  void set_message_header(::google::protobuf::int32 value);

  // optional bytes message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:zproto.Package)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 auth_id_;
  ::google::protobuf::int64 session_id_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 message_header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static Package* default_instance_;
};
// -------------------------------------------------------------------

class PlainTextMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.PlainTextMessage) */ {
 public:
  PlainTextMessage();
  virtual ~PlainTextMessage();

  PlainTextMessage(const PlainTextMessage& from);

  inline PlainTextMessage& operator=(const PlainTextMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlainTextMessage& default_instance();

  void Swap(PlainTextMessage* other);

  // implements Message ----------------------------------------------

  inline PlainTextMessage* New() const { return New(NULL); }

  PlainTextMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlainTextMessage& from);
  void MergeFrom(const PlainTextMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlainTextMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::int64 message_id() const;
  void set_message_id(::google::protobuf::int64 value);

  // optional bytes message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:zproto.PlainTextMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 message_id_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static PlainTextMessage* default_instance_;
};
// -------------------------------------------------------------------

class EncryptedMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.EncryptedMessage) */ {
 public:
  EncryptedMessage();
  virtual ~EncryptedMessage();

  EncryptedMessage(const EncryptedMessage& from);

  inline EncryptedMessage& operator=(const EncryptedMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EncryptedMessage& default_instance();

  void Swap(EncryptedMessage* other);

  // implements Message ----------------------------------------------

  inline EncryptedMessage* New() const { return New(NULL); }

  EncryptedMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EncryptedMessage& from);
  void MergeFrom(const EncryptedMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EncryptedMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 seq_number = 1;
  void clear_seq_number();
  static const int kSeqNumberFieldNumber = 1;
  ::google::protobuf::int64 seq_number() const;
  void set_seq_number(::google::protobuf::int64 value);

  // optional bytes encrypted_package = 2;
  void clear_encrypted_package();
  static const int kEncryptedPackageFieldNumber = 2;
  const ::std::string& encrypted_package() const;
  void set_encrypted_package(const ::std::string& value);
  void set_encrypted_package(const char* value);
  void set_encrypted_package(const void* value, size_t size);
  ::std::string* mutable_encrypted_package();
  ::std::string* release_encrypted_package();
  void set_allocated_encrypted_package(::std::string* encrypted_package);

  // @@protoc_insertion_point(class_scope:zproto.EncryptedMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 seq_number_;
  ::google::protobuf::internal::ArenaStringPtr encrypted_package_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static EncryptedMessage* default_instance_;
};
// -------------------------------------------------------------------

class Drop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Drop) */ {
 public:
  Drop();
  virtual ~Drop();

  Drop(const Drop& from);

  inline Drop& operator=(const Drop& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Drop& default_instance();

  void Swap(Drop* other);

  // implements Message ----------------------------------------------

  inline Drop* New() const { return New(NULL); }

  Drop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Drop& from);
  void MergeFrom(const Drop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Drop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::int64 message_id() const;
  void set_message_id(::google::protobuf::int64 value);

  // optional string error_tag = 2;
  void clear_error_tag();
  static const int kErrorTagFieldNumber = 2;
  const ::std::string& error_tag() const;
  void set_error_tag(const ::std::string& value);
  void set_error_tag(const char* value);
  void set_error_tag(const char* value, size_t size);
  ::std::string* mutable_error_tag();
  ::std::string* release_error_tag();
  void set_allocated_error_tag(::std::string* error_tag);

  // @@protoc_insertion_point(class_scope:zproto.Drop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 message_id_;
  ::google::protobuf::internal::ArenaStringPtr error_tag_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static Drop* default_instance_;
};
// -------------------------------------------------------------------

class RequestAuthId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.RequestAuthId) */ {
 public:
  RequestAuthId();
  virtual ~RequestAuthId();

  RequestAuthId(const RequestAuthId& from);

  inline RequestAuthId& operator=(const RequestAuthId& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAuthId& default_instance();

  void Swap(RequestAuthId* other);

  // implements Message ----------------------------------------------

  inline RequestAuthId* New() const { return New(NULL); }

  RequestAuthId* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAuthId& from);
  void MergeFrom(const RequestAuthId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestAuthId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.RequestAuthId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static RequestAuthId* default_instance_;
};
// -------------------------------------------------------------------

class ResponseAuthId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ResponseAuthId) */ {
 public:
  ResponseAuthId();
  virtual ~ResponseAuthId();

  ResponseAuthId(const ResponseAuthId& from);

  inline ResponseAuthId& operator=(const ResponseAuthId& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseAuthId& default_instance();

  void Swap(ResponseAuthId* other);

  // implements Message ----------------------------------------------

  inline ResponseAuthId* New() const { return New(NULL); }

  ResponseAuthId* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseAuthId& from);
  void MergeFrom(const ResponseAuthId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseAuthId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 auth_id = 1;
  void clear_auth_id();
  static const int kAuthIdFieldNumber = 1;
  ::google::protobuf::int64 auth_id() const;
  void set_auth_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:zproto.ResponseAuthId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 auth_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static ResponseAuthId* default_instance_;
};
// -------------------------------------------------------------------

class RequestStartAuth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.RequestStartAuth) */ {
 public:
  RequestStartAuth();
  virtual ~RequestStartAuth();

  RequestStartAuth(const RequestStartAuth& from);

  inline RequestStartAuth& operator=(const RequestStartAuth& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestStartAuth& default_instance();

  void Swap(RequestStartAuth* other);

  // implements Message ----------------------------------------------

  inline RequestStartAuth* New() const { return New(NULL); }

  RequestStartAuth* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestStartAuth& from);
  void MergeFrom(const RequestStartAuth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestStartAuth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 random_id = 1;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 1;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:zproto.RequestStartAuth)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 random_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static RequestStartAuth* default_instance_;
};
// -------------------------------------------------------------------

class ResponseStartAuth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ResponseStartAuth) */ {
 public:
  ResponseStartAuth();
  virtual ~ResponseStartAuth();

  ResponseStartAuth(const ResponseStartAuth& from);

  inline ResponseStartAuth& operator=(const ResponseStartAuth& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseStartAuth& default_instance();

  void Swap(ResponseStartAuth* other);

  // implements Message ----------------------------------------------

  inline ResponseStartAuth* New() const { return New(NULL); }

  ResponseStartAuth* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseStartAuth& from);
  void MergeFrom(const ResponseStartAuth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseStartAuth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 random_id = 1;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 1;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // repeated int64 available_keys = 2;
  int available_keys_size() const;
  void clear_available_keys();
  static const int kAvailableKeysFieldNumber = 2;
  ::google::protobuf::int64 available_keys(int index) const;
  void set_available_keys(int index, ::google::protobuf::int64 value);
  void add_available_keys(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      available_keys() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_available_keys();

  // optional bytes server_nonce = 3;
  void clear_server_nonce();
  static const int kServerNonceFieldNumber = 3;
  const ::std::string& server_nonce() const;
  void set_server_nonce(const ::std::string& value);
  void set_server_nonce(const char* value);
  void set_server_nonce(const void* value, size_t size);
  ::std::string* mutable_server_nonce();
  ::std::string* release_server_nonce();
  void set_allocated_server_nonce(::std::string* server_nonce);

  // @@protoc_insertion_point(class_scope:zproto.ResponseStartAuth)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 random_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > available_keys_;
  mutable int _available_keys_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr server_nonce_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static ResponseStartAuth* default_instance_;
};
// -------------------------------------------------------------------

class RequestGetServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.RequestGetServerKey) */ {
 public:
  RequestGetServerKey();
  virtual ~RequestGetServerKey();

  RequestGetServerKey(const RequestGetServerKey& from);

  inline RequestGetServerKey& operator=(const RequestGetServerKey& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestGetServerKey& default_instance();

  void Swap(RequestGetServerKey* other);

  // implements Message ----------------------------------------------

  inline RequestGetServerKey* New() const { return New(NULL); }

  RequestGetServerKey* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestGetServerKey& from);
  void MergeFrom(const RequestGetServerKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestGetServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  ::google::protobuf::int64 key_id() const;
  void set_key_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:zproto.RequestGetServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 key_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static RequestGetServerKey* default_instance_;
};
// -------------------------------------------------------------------

class ResponseGetServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ResponseGetServerKey) */ {
 public:
  ResponseGetServerKey();
  virtual ~ResponseGetServerKey();

  ResponseGetServerKey(const ResponseGetServerKey& from);

  inline ResponseGetServerKey& operator=(const ResponseGetServerKey& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseGetServerKey& default_instance();

  void Swap(ResponseGetServerKey* other);

  // implements Message ----------------------------------------------

  inline ResponseGetServerKey* New() const { return New(NULL); }

  ResponseGetServerKey* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseGetServerKey& from);
  void MergeFrom(const ResponseGetServerKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseGetServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  ::google::protobuf::int64 key_id() const;
  void set_key_id(::google::protobuf::int64 value);

  // optional bytes key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:zproto.ResponseGetServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 key_id_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static ResponseGetServerKey* default_instance_;
};
// -------------------------------------------------------------------

class RequestDH : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.RequestDH) */ {
 public:
  RequestDH();
  virtual ~RequestDH();

  RequestDH(const RequestDH& from);

  inline RequestDH& operator=(const RequestDH& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestDH& default_instance();

  void Swap(RequestDH* other);

  // implements Message ----------------------------------------------

  inline RequestDH* New() const { return New(NULL); }

  RequestDH* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestDH& from);
  void MergeFrom(const RequestDH& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestDH* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 random_id = 1;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 1;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // optional int64 key_id = 2;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 2;
  ::google::protobuf::int64 key_id() const;
  void set_key_id(::google::protobuf::int64 value);

  // optional bytes client_nonce = 3;
  void clear_client_nonce();
  static const int kClientNonceFieldNumber = 3;
  const ::std::string& client_nonce() const;
  void set_client_nonce(const ::std::string& value);
  void set_client_nonce(const char* value);
  void set_client_nonce(const void* value, size_t size);
  ::std::string* mutable_client_nonce();
  ::std::string* release_client_nonce();
  void set_allocated_client_nonce(::std::string* client_nonce);

  // optional bytes client_key = 4;
  void clear_client_key();
  static const int kClientKeyFieldNumber = 4;
  const ::std::string& client_key() const;
  void set_client_key(const ::std::string& value);
  void set_client_key(const char* value);
  void set_client_key(const void* value, size_t size);
  ::std::string* mutable_client_key();
  ::std::string* release_client_key();
  void set_allocated_client_key(::std::string* client_key);

  // @@protoc_insertion_point(class_scope:zproto.RequestDH)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 random_id_;
  ::google::protobuf::int64 key_id_;
  ::google::protobuf::internal::ArenaStringPtr client_nonce_;
  ::google::protobuf::internal::ArenaStringPtr client_key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static RequestDH* default_instance_;
};
// -------------------------------------------------------------------

class ResponseDoDH : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ResponseDoDH) */ {
 public:
  ResponseDoDH();
  virtual ~ResponseDoDH();

  ResponseDoDH(const ResponseDoDH& from);

  inline ResponseDoDH& operator=(const ResponseDoDH& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseDoDH& default_instance();

  void Swap(ResponseDoDH* other);

  // implements Message ----------------------------------------------

  inline ResponseDoDH* New() const { return New(NULL); }

  ResponseDoDH* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseDoDH& from);
  void MergeFrom(const ResponseDoDH& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseDoDH* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 random_id = 1;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 1;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // optional bytes verify = 2;
  void clear_verify();
  static const int kVerifyFieldNumber = 2;
  const ::std::string& verify() const;
  void set_verify(const ::std::string& value);
  void set_verify(const char* value);
  void set_verify(const void* value, size_t size);
  ::std::string* mutable_verify();
  ::std::string* release_verify();
  void set_allocated_verify(::std::string* verify);

  // optional bytes verify_sign = 3;
  void clear_verify_sign();
  static const int kVerifySignFieldNumber = 3;
  const ::std::string& verify_sign() const;
  void set_verify_sign(const ::std::string& value);
  void set_verify_sign(const char* value);
  void set_verify_sign(const void* value, size_t size);
  ::std::string* mutable_verify_sign();
  ::std::string* release_verify_sign();
  void set_allocated_verify_sign(::std::string* verify_sign);

  // @@protoc_insertion_point(class_scope:zproto.ResponseDoDH)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 random_id_;
  ::google::protobuf::internal::ArenaStringPtr verify_;
  ::google::protobuf::internal::ArenaStringPtr verify_sign_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static ResponseDoDH* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRpcRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ProtoRpcRequest) */ {
 public:
  ProtoRpcRequest();
  virtual ~ProtoRpcRequest();

  ProtoRpcRequest(const ProtoRpcRequest& from);

  inline ProtoRpcRequest& operator=(const ProtoRpcRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRpcRequest& default_instance();

  void Swap(ProtoRpcRequest* other);

  // implements Message ----------------------------------------------

  inline ProtoRpcRequest* New() const { return New(NULL); }

  ProtoRpcRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRpcRequest& from);
  void MergeFrom(const ProtoRpcRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtoRpcRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes payload = 1;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:zproto.ProtoRpcRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static ProtoRpcRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRpcResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ProtoRpcResponse) */ {
 public:
  ProtoRpcResponse();
  virtual ~ProtoRpcResponse();

  ProtoRpcResponse(const ProtoRpcResponse& from);

  inline ProtoRpcResponse& operator=(const ProtoRpcResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRpcResponse& default_instance();

  void Swap(ProtoRpcResponse* other);

  // implements Message ----------------------------------------------

  inline ProtoRpcResponse* New() const { return New(NULL); }

  ProtoRpcResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRpcResponse& from);
  void MergeFrom(const ProtoRpcResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtoRpcResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::int64 message_id() const;
  void set_message_id(::google::protobuf::int64 value);

  // optional bytes payload = 2;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:zproto.ProtoRpcResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 message_id_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static ProtoRpcResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.ProtoPush) */ {
 public:
  ProtoPush();
  virtual ~ProtoPush();

  ProtoPush(const ProtoPush& from);

  inline ProtoPush& operator=(const ProtoPush& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPush& default_instance();

  void Swap(ProtoPush* other);

  // implements Message ----------------------------------------------

  inline ProtoPush* New() const { return New(NULL); }

  ProtoPush* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoPush& from);
  void MergeFrom(const ProtoPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtoPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes payload = 1;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:zproto.ProtoPush)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static ProtoPush* default_instance_;
};
// -------------------------------------------------------------------

class MessageAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageAck) */ {
 public:
  MessageAck();
  virtual ~MessageAck();

  MessageAck(const MessageAck& from);

  inline MessageAck& operator=(const MessageAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageAck& default_instance();

  void Swap(MessageAck* other);

  // implements Message ----------------------------------------------

  inline MessageAck* New() const { return New(NULL); }

  MessageAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageAck& from);
  void MergeFrom(const MessageAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 message_ids = 1;
  int message_ids_size() const;
  void clear_message_ids();
  static const int kMessageIdsFieldNumber = 1;
  ::google::protobuf::int64 message_ids(int index) const;
  void set_message_ids(int index, ::google::protobuf::int64 value);
  void add_message_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      message_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_message_ids();

  // @@protoc_insertion_point(class_scope:zproto.MessageAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > message_ids_;
  mutable int _message_ids_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static MessageAck* default_instance_;
};
// -------------------------------------------------------------------

class UnsentMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.UnsentMessage) */ {
 public:
  UnsentMessage();
  virtual ~UnsentMessage();

  UnsentMessage(const UnsentMessage& from);

  inline UnsentMessage& operator=(const UnsentMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsentMessage& default_instance();

  void Swap(UnsentMessage* other);

  // implements Message ----------------------------------------------

  inline UnsentMessage* New() const { return New(NULL); }

  UnsentMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsentMessage& from);
  void MergeFrom(const UnsentMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnsentMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::int64 message_id() const;
  void set_message_id(::google::protobuf::int64 value);

  // optional int32 len = 2;
  void clear_len();
  static const int kLenFieldNumber = 2;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zproto.UnsentMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 message_id_;
  ::google::protobuf::int32 len_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static UnsentMessage* default_instance_;
};
// -------------------------------------------------------------------

class UnsentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.UnsentResponse) */ {
 public:
  UnsentResponse();
  virtual ~UnsentResponse();

  UnsentResponse(const UnsentResponse& from);

  inline UnsentResponse& operator=(const UnsentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsentResponse& default_instance();

  void Swap(UnsentResponse* other);

  // implements Message ----------------------------------------------

  inline UnsentResponse* New() const { return New(NULL); }

  UnsentResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsentResponse& from);
  void MergeFrom(const UnsentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnsentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::int64 message_id() const;
  void set_message_id(::google::protobuf::int64 value);

  // optional int64 request_message_id = 2;
  void clear_request_message_id();
  static const int kRequestMessageIdFieldNumber = 2;
  ::google::protobuf::int64 request_message_id() const;
  void set_request_message_id(::google::protobuf::int64 value);

  // optional int32 len = 3;
  void clear_len();
  static const int kLenFieldNumber = 3;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zproto.UnsentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 message_id_;
  ::google::protobuf::int64 request_message_id_;
  ::google::protobuf::int32 len_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static UnsentResponse* default_instance_;
};
// -------------------------------------------------------------------

class RequestResend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.RequestResend) */ {
 public:
  RequestResend();
  virtual ~RequestResend();

  RequestResend(const RequestResend& from);

  inline RequestResend& operator=(const RequestResend& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestResend& default_instance();

  void Swap(RequestResend* other);

  // implements Message ----------------------------------------------

  inline RequestResend* New() const { return New(NULL); }

  RequestResend* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestResend& from);
  void MergeFrom(const RequestResend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestResend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::int64 message_id() const;
  void set_message_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:zproto.RequestResend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 message_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static RequestResend* default_instance_;
};
// -------------------------------------------------------------------

class NewSession : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.NewSession) */ {
 public:
  NewSession();
  virtual ~NewSession();

  NewSession(const NewSession& from);

  inline NewSession& operator=(const NewSession& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSession& default_instance();

  void Swap(NewSession* other);

  // implements Message ----------------------------------------------

  inline NewSession* New() const { return New(NULL); }

  NewSession* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewSession& from);
  void MergeFrom(const NewSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NewSession* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int64 session_id() const;
  void set_session_id(::google::protobuf::int64 value);

  // optional int64 message_id = 2;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 2;
  ::google::protobuf::int64 message_id() const;
  void set_message_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:zproto.NewSession)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 session_id_;
  ::google::protobuf::int64 message_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static NewSession* default_instance_;
};
// -------------------------------------------------------------------

class SessionHello : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SessionHello) */ {
 public:
  SessionHello();
  virtual ~SessionHello();

  SessionHello(const SessionHello& from);

  inline SessionHello& operator=(const SessionHello& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionHello& default_instance();

  void Swap(SessionHello* other);

  // implements Message ----------------------------------------------

  inline SessionHello* New() const { return New(NULL); }

  SessionHello* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionHello& from);
  void MergeFrom(const SessionHello& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SessionHello* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.SessionHello)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static SessionHello* default_instance_;
};
// -------------------------------------------------------------------

class SessionLost : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SessionLost) */ {
 public:
  SessionLost();
  virtual ~SessionLost();

  SessionLost(const SessionLost& from);

  inline SessionLost& operator=(const SessionLost& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionLost& default_instance();

  void Swap(SessionLost* other);

  // implements Message ----------------------------------------------

  inline SessionLost* New() const { return New(NULL); }

  SessionLost* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionLost& from);
  void MergeFrom(const SessionLost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SessionLost* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.SessionLost)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static SessionLost* default_instance_;
};
// -------------------------------------------------------------------

class Container : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Container) */ {
 public:
  Container();
  virtual ~Container();

  Container(const Container& from);

  inline Container& operator=(const Container& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Container& default_instance();

  void Swap(Container* other);

  // implements Message ----------------------------------------------

  inline Container* New() const { return New(NULL); }

  Container* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Container& from);
  void MergeFrom(const Container& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Container* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data(int index) const;
  ::std::string* mutable_data(int index);
  void set_data(int index, const ::std::string& value);
  void set_data(int index, const char* value);
  void set_data(int index, const void* value, size_t size);
  ::std::string* add_data();
  void add_data(const ::std::string& value);
  void add_data(const char* value);
  void add_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data();

  // @@protoc_insertion_point(class_scope:zproto.Container)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5ftransport_2eproto();
  friend void protobuf_AssignDesc_zproto_5ftransport_2eproto();
  friend void protobuf_ShutdownFile_zproto_5ftransport_2eproto();

  void InitAsDefaultInstance();
  static Container* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Package

// optional int64 auth_id = 1;
inline void Package::clear_auth_id() {
  auth_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Package::auth_id() const {
  // @@protoc_insertion_point(field_get:zproto.Package.auth_id)
  return auth_id_;
}
inline void Package::set_auth_id(::google::protobuf::int64 value) {
  
  auth_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.Package.auth_id)
}

// optional int64 session_id = 2;
inline void Package::clear_session_id() {
  session_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Package::session_id() const {
  // @@protoc_insertion_point(field_get:zproto.Package.session_id)
  return session_id_;
}
inline void Package::set_session_id(::google::protobuf::int64 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.Package.session_id)
}

// optional int32 message_header = 3;
inline void Package::clear_message_header() {
  message_header_ = 0;
}
inline ::google::protobuf::int32 Package::message_header() const {
  // @@protoc_insertion_point(field_get:zproto.Package.message_header)
  return message_header_;
}
inline void Package::set_message_header(::google::protobuf::int32 value) {
  
  message_header_ = value;
  // @@protoc_insertion_point(field_set:zproto.Package.message_header)
}

// optional bytes message = 4;
inline void Package::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Package::message() const {
  // @@protoc_insertion_point(field_get:zproto.Package.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Package::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Package.message)
}
inline void Package::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Package.message)
}
inline void Package::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Package.message)
}
inline ::std::string* Package::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Package.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Package::release_message() {
  // @@protoc_insertion_point(field_release:zproto.Package.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Package::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:zproto.Package.message)
}

// -------------------------------------------------------------------

// PlainTextMessage

// optional int64 message_id = 1;
inline void PlainTextMessage::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PlainTextMessage::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.PlainTextMessage.message_id)
  return message_id_;
}
inline void PlainTextMessage::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.PlainTextMessage.message_id)
}

// optional bytes message = 2;
inline void PlainTextMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlainTextMessage::message() const {
  // @@protoc_insertion_point(field_get:zproto.PlainTextMessage.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlainTextMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.PlainTextMessage.message)
}
inline void PlainTextMessage::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.PlainTextMessage.message)
}
inline void PlainTextMessage::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.PlainTextMessage.message)
}
inline ::std::string* PlainTextMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:zproto.PlainTextMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlainTextMessage::release_message() {
  // @@protoc_insertion_point(field_release:zproto.PlainTextMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlainTextMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:zproto.PlainTextMessage.message)
}

// -------------------------------------------------------------------

// EncryptedMessage

// optional int64 seq_number = 1;
inline void EncryptedMessage::clear_seq_number() {
  seq_number_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EncryptedMessage::seq_number() const {
  // @@protoc_insertion_point(field_get:zproto.EncryptedMessage.seq_number)
  return seq_number_;
}
inline void EncryptedMessage::set_seq_number(::google::protobuf::int64 value) {
  
  seq_number_ = value;
  // @@protoc_insertion_point(field_set:zproto.EncryptedMessage.seq_number)
}

// optional bytes encrypted_package = 2;
inline void EncryptedMessage::clear_encrypted_package() {
  encrypted_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptedMessage::encrypted_package() const {
  // @@protoc_insertion_point(field_get:zproto.EncryptedMessage.encrypted_package)
  return encrypted_package_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptedMessage::set_encrypted_package(const ::std::string& value) {
  
  encrypted_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.EncryptedMessage.encrypted_package)
}
inline void EncryptedMessage::set_encrypted_package(const char* value) {
  
  encrypted_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.EncryptedMessage.encrypted_package)
}
inline void EncryptedMessage::set_encrypted_package(const void* value, size_t size) {
  
  encrypted_package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.EncryptedMessage.encrypted_package)
}
inline ::std::string* EncryptedMessage::mutable_encrypted_package() {
  
  // @@protoc_insertion_point(field_mutable:zproto.EncryptedMessage.encrypted_package)
  return encrypted_package_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptedMessage::release_encrypted_package() {
  // @@protoc_insertion_point(field_release:zproto.EncryptedMessage.encrypted_package)
  
  return encrypted_package_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptedMessage::set_allocated_encrypted_package(::std::string* encrypted_package) {
  if (encrypted_package != NULL) {
    
  } else {
    
  }
  encrypted_package_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_package);
  // @@protoc_insertion_point(field_set_allocated:zproto.EncryptedMessage.encrypted_package)
}

// -------------------------------------------------------------------

// Drop

// optional int64 message_id = 1;
inline void Drop::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Drop::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.Drop.message_id)
  return message_id_;
}
inline void Drop::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.Drop.message_id)
}

// optional string error_tag = 2;
inline void Drop::clear_error_tag() {
  error_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Drop::error_tag() const {
  // @@protoc_insertion_point(field_get:zproto.Drop.error_tag)
  return error_tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Drop::set_error_tag(const ::std::string& value) {
  
  error_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Drop.error_tag)
}
inline void Drop::set_error_tag(const char* value) {
  
  error_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Drop.error_tag)
}
inline void Drop::set_error_tag(const char* value, size_t size) {
  
  error_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Drop.error_tag)
}
inline ::std::string* Drop::mutable_error_tag() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Drop.error_tag)
  return error_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Drop::release_error_tag() {
  // @@protoc_insertion_point(field_release:zproto.Drop.error_tag)
  
  return error_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Drop::set_allocated_error_tag(::std::string* error_tag) {
  if (error_tag != NULL) {
    
  } else {
    
  }
  error_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_tag);
  // @@protoc_insertion_point(field_set_allocated:zproto.Drop.error_tag)
}

// -------------------------------------------------------------------

// RequestAuthId

// -------------------------------------------------------------------

// ResponseAuthId

// optional int64 auth_id = 1;
inline void ResponseAuthId::clear_auth_id() {
  auth_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResponseAuthId::auth_id() const {
  // @@protoc_insertion_point(field_get:zproto.ResponseAuthId.auth_id)
  return auth_id_;
}
inline void ResponseAuthId::set_auth_id(::google::protobuf::int64 value) {
  
  auth_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ResponseAuthId.auth_id)
}

// -------------------------------------------------------------------

// RequestStartAuth

// optional int64 random_id = 1;
inline void RequestStartAuth::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestStartAuth::random_id() const {
  // @@protoc_insertion_point(field_get:zproto.RequestStartAuth.random_id)
  return random_id_;
}
inline void RequestStartAuth::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.RequestStartAuth.random_id)
}

// -------------------------------------------------------------------

// ResponseStartAuth

// optional int64 random_id = 1;
inline void ResponseStartAuth::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResponseStartAuth::random_id() const {
  // @@protoc_insertion_point(field_get:zproto.ResponseStartAuth.random_id)
  return random_id_;
}
inline void ResponseStartAuth::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ResponseStartAuth.random_id)
}

// repeated int64 available_keys = 2;
inline int ResponseStartAuth::available_keys_size() const {
  return available_keys_.size();
}
inline void ResponseStartAuth::clear_available_keys() {
  available_keys_.Clear();
}
inline ::google::protobuf::int64 ResponseStartAuth::available_keys(int index) const {
  // @@protoc_insertion_point(field_get:zproto.ResponseStartAuth.available_keys)
  return available_keys_.Get(index);
}
inline void ResponseStartAuth::set_available_keys(int index, ::google::protobuf::int64 value) {
  available_keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.ResponseStartAuth.available_keys)
}
inline void ResponseStartAuth::add_available_keys(::google::protobuf::int64 value) {
  available_keys_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.ResponseStartAuth.available_keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ResponseStartAuth::available_keys() const {
  // @@protoc_insertion_point(field_list:zproto.ResponseStartAuth.available_keys)
  return available_keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ResponseStartAuth::mutable_available_keys() {
  // @@protoc_insertion_point(field_mutable_list:zproto.ResponseStartAuth.available_keys)
  return &available_keys_;
}

// optional bytes server_nonce = 3;
inline void ResponseStartAuth::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseStartAuth::server_nonce() const {
  // @@protoc_insertion_point(field_get:zproto.ResponseStartAuth.server_nonce)
  return server_nonce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseStartAuth::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ResponseStartAuth.server_nonce)
}
inline void ResponseStartAuth::set_server_nonce(const char* value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ResponseStartAuth.server_nonce)
}
inline void ResponseStartAuth::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ResponseStartAuth.server_nonce)
}
inline ::std::string* ResponseStartAuth::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ResponseStartAuth.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseStartAuth::release_server_nonce() {
  // @@protoc_insertion_point(field_release:zproto.ResponseStartAuth.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseStartAuth::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:zproto.ResponseStartAuth.server_nonce)
}

// -------------------------------------------------------------------

// RequestGetServerKey

// optional int64 key_id = 1;
inline void RequestGetServerKey::clear_key_id() {
  key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestGetServerKey::key_id() const {
  // @@protoc_insertion_point(field_get:zproto.RequestGetServerKey.key_id)
  return key_id_;
}
inline void RequestGetServerKey::set_key_id(::google::protobuf::int64 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.RequestGetServerKey.key_id)
}

// -------------------------------------------------------------------

// ResponseGetServerKey

// optional int64 key_id = 1;
inline void ResponseGetServerKey::clear_key_id() {
  key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResponseGetServerKey::key_id() const {
  // @@protoc_insertion_point(field_get:zproto.ResponseGetServerKey.key_id)
  return key_id_;
}
inline void ResponseGetServerKey::set_key_id(::google::protobuf::int64 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ResponseGetServerKey.key_id)
}

// optional bytes key = 2;
inline void ResponseGetServerKey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseGetServerKey::key() const {
  // @@protoc_insertion_point(field_get:zproto.ResponseGetServerKey.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseGetServerKey::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ResponseGetServerKey.key)
}
inline void ResponseGetServerKey::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ResponseGetServerKey.key)
}
inline void ResponseGetServerKey::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ResponseGetServerKey.key)
}
inline ::std::string* ResponseGetServerKey::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ResponseGetServerKey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseGetServerKey::release_key() {
  // @@protoc_insertion_point(field_release:zproto.ResponseGetServerKey.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseGetServerKey::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:zproto.ResponseGetServerKey.key)
}

// -------------------------------------------------------------------

// RequestDH

// optional int64 random_id = 1;
inline void RequestDH::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestDH::random_id() const {
  // @@protoc_insertion_point(field_get:zproto.RequestDH.random_id)
  return random_id_;
}
inline void RequestDH::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.RequestDH.random_id)
}

// optional int64 key_id = 2;
inline void RequestDH::clear_key_id() {
  key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestDH::key_id() const {
  // @@protoc_insertion_point(field_get:zproto.RequestDH.key_id)
  return key_id_;
}
inline void RequestDH::set_key_id(::google::protobuf::int64 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.RequestDH.key_id)
}

// optional bytes client_nonce = 3;
inline void RequestDH::clear_client_nonce() {
  client_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestDH::client_nonce() const {
  // @@protoc_insertion_point(field_get:zproto.RequestDH.client_nonce)
  return client_nonce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestDH::set_client_nonce(const ::std::string& value) {
  
  client_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.RequestDH.client_nonce)
}
inline void RequestDH::set_client_nonce(const char* value) {
  
  client_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.RequestDH.client_nonce)
}
inline void RequestDH::set_client_nonce(const void* value, size_t size) {
  
  client_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.RequestDH.client_nonce)
}
inline ::std::string* RequestDH::mutable_client_nonce() {
  
  // @@protoc_insertion_point(field_mutable:zproto.RequestDH.client_nonce)
  return client_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestDH::release_client_nonce() {
  // @@protoc_insertion_point(field_release:zproto.RequestDH.client_nonce)
  
  return client_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestDH::set_allocated_client_nonce(::std::string* client_nonce) {
  if (client_nonce != NULL) {
    
  } else {
    
  }
  client_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_nonce);
  // @@protoc_insertion_point(field_set_allocated:zproto.RequestDH.client_nonce)
}

// optional bytes client_key = 4;
inline void RequestDH::clear_client_key() {
  client_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestDH::client_key() const {
  // @@protoc_insertion_point(field_get:zproto.RequestDH.client_key)
  return client_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestDH::set_client_key(const ::std::string& value) {
  
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.RequestDH.client_key)
}
inline void RequestDH::set_client_key(const char* value) {
  
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.RequestDH.client_key)
}
inline void RequestDH::set_client_key(const void* value, size_t size) {
  
  client_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.RequestDH.client_key)
}
inline ::std::string* RequestDH::mutable_client_key() {
  
  // @@protoc_insertion_point(field_mutable:zproto.RequestDH.client_key)
  return client_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestDH::release_client_key() {
  // @@protoc_insertion_point(field_release:zproto.RequestDH.client_key)
  
  return client_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestDH::set_allocated_client_key(::std::string* client_key) {
  if (client_key != NULL) {
    
  } else {
    
  }
  client_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_key);
  // @@protoc_insertion_point(field_set_allocated:zproto.RequestDH.client_key)
}

// -------------------------------------------------------------------

// ResponseDoDH

// optional int64 random_id = 1;
inline void ResponseDoDH::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResponseDoDH::random_id() const {
  // @@protoc_insertion_point(field_get:zproto.ResponseDoDH.random_id)
  return random_id_;
}
inline void ResponseDoDH::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ResponseDoDH.random_id)
}

// optional bytes verify = 2;
inline void ResponseDoDH::clear_verify() {
  verify_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseDoDH::verify() const {
  // @@protoc_insertion_point(field_get:zproto.ResponseDoDH.verify)
  return verify_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseDoDH::set_verify(const ::std::string& value) {
  
  verify_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ResponseDoDH.verify)
}
inline void ResponseDoDH::set_verify(const char* value) {
  
  verify_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ResponseDoDH.verify)
}
inline void ResponseDoDH::set_verify(const void* value, size_t size) {
  
  verify_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ResponseDoDH.verify)
}
inline ::std::string* ResponseDoDH::mutable_verify() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ResponseDoDH.verify)
  return verify_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseDoDH::release_verify() {
  // @@protoc_insertion_point(field_release:zproto.ResponseDoDH.verify)
  
  return verify_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseDoDH::set_allocated_verify(::std::string* verify) {
  if (verify != NULL) {
    
  } else {
    
  }
  verify_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verify);
  // @@protoc_insertion_point(field_set_allocated:zproto.ResponseDoDH.verify)
}

// optional bytes verify_sign = 3;
inline void ResponseDoDH::clear_verify_sign() {
  verify_sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseDoDH::verify_sign() const {
  // @@protoc_insertion_point(field_get:zproto.ResponseDoDH.verify_sign)
  return verify_sign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseDoDH::set_verify_sign(const ::std::string& value) {
  
  verify_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ResponseDoDH.verify_sign)
}
inline void ResponseDoDH::set_verify_sign(const char* value) {
  
  verify_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ResponseDoDH.verify_sign)
}
inline void ResponseDoDH::set_verify_sign(const void* value, size_t size) {
  
  verify_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ResponseDoDH.verify_sign)
}
inline ::std::string* ResponseDoDH::mutable_verify_sign() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ResponseDoDH.verify_sign)
  return verify_sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseDoDH::release_verify_sign() {
  // @@protoc_insertion_point(field_release:zproto.ResponseDoDH.verify_sign)
  
  return verify_sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseDoDH::set_allocated_verify_sign(::std::string* verify_sign) {
  if (verify_sign != NULL) {
    
  } else {
    
  }
  verify_sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verify_sign);
  // @@protoc_insertion_point(field_set_allocated:zproto.ResponseDoDH.verify_sign)
}

// -------------------------------------------------------------------

// ProtoRpcRequest

// optional bytes payload = 1;
inline void ProtoRpcRequest::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoRpcRequest::payload() const {
  // @@protoc_insertion_point(field_get:zproto.ProtoRpcRequest.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRpcRequest::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ProtoRpcRequest.payload)
}
inline void ProtoRpcRequest::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ProtoRpcRequest.payload)
}
inline void ProtoRpcRequest::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ProtoRpcRequest.payload)
}
inline ::std::string* ProtoRpcRequest::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ProtoRpcRequest.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoRpcRequest::release_payload() {
  // @@protoc_insertion_point(field_release:zproto.ProtoRpcRequest.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRpcRequest::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:zproto.ProtoRpcRequest.payload)
}

// -------------------------------------------------------------------

// ProtoRpcResponse

// optional int64 message_id = 1;
inline void ProtoRpcResponse::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoRpcResponse::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.ProtoRpcResponse.message_id)
  return message_id_;
}
inline void ProtoRpcResponse::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ProtoRpcResponse.message_id)
}

// optional bytes payload = 2;
inline void ProtoRpcResponse::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoRpcResponse::payload() const {
  // @@protoc_insertion_point(field_get:zproto.ProtoRpcResponse.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRpcResponse::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ProtoRpcResponse.payload)
}
inline void ProtoRpcResponse::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ProtoRpcResponse.payload)
}
inline void ProtoRpcResponse::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ProtoRpcResponse.payload)
}
inline ::std::string* ProtoRpcResponse::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ProtoRpcResponse.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoRpcResponse::release_payload() {
  // @@protoc_insertion_point(field_release:zproto.ProtoRpcResponse.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoRpcResponse::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:zproto.ProtoRpcResponse.payload)
}

// -------------------------------------------------------------------

// ProtoPush

// optional bytes payload = 1;
inline void ProtoPush::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPush::payload() const {
  // @@protoc_insertion_point(field_get:zproto.ProtoPush.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPush::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ProtoPush.payload)
}
inline void ProtoPush::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ProtoPush.payload)
}
inline void ProtoPush::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ProtoPush.payload)
}
inline ::std::string* ProtoPush::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ProtoPush.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPush::release_payload() {
  // @@protoc_insertion_point(field_release:zproto.ProtoPush.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPush::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:zproto.ProtoPush.payload)
}

// -------------------------------------------------------------------

// MessageAck

// repeated int64 message_ids = 1;
inline int MessageAck::message_ids_size() const {
  return message_ids_.size();
}
inline void MessageAck::clear_message_ids() {
  message_ids_.Clear();
}
inline ::google::protobuf::int64 MessageAck::message_ids(int index) const {
  // @@protoc_insertion_point(field_get:zproto.MessageAck.message_ids)
  return message_ids_.Get(index);
}
inline void MessageAck::set_message_ids(int index, ::google::protobuf::int64 value) {
  message_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.MessageAck.message_ids)
}
inline void MessageAck::add_message_ids(::google::protobuf::int64 value) {
  message_ids_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.MessageAck.message_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageAck::message_ids() const {
  // @@protoc_insertion_point(field_list:zproto.MessageAck.message_ids)
  return message_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageAck::mutable_message_ids() {
  // @@protoc_insertion_point(field_mutable_list:zproto.MessageAck.message_ids)
  return &message_ids_;
}

// -------------------------------------------------------------------

// UnsentMessage

// optional int64 message_id = 1;
inline void UnsentMessage::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UnsentMessage::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.UnsentMessage.message_id)
  return message_id_;
}
inline void UnsentMessage::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.UnsentMessage.message_id)
}

// optional int32 len = 2;
inline void UnsentMessage::clear_len() {
  len_ = 0;
}
inline ::google::protobuf::int32 UnsentMessage::len() const {
  // @@protoc_insertion_point(field_get:zproto.UnsentMessage.len)
  return len_;
}
inline void UnsentMessage::set_len(::google::protobuf::int32 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:zproto.UnsentMessage.len)
}

// -------------------------------------------------------------------

// UnsentResponse

// optional int64 message_id = 1;
inline void UnsentResponse::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UnsentResponse::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.UnsentResponse.message_id)
  return message_id_;
}
inline void UnsentResponse::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.UnsentResponse.message_id)
}

// optional int64 request_message_id = 2;
inline void UnsentResponse::clear_request_message_id() {
  request_message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UnsentResponse::request_message_id() const {
  // @@protoc_insertion_point(field_get:zproto.UnsentResponse.request_message_id)
  return request_message_id_;
}
inline void UnsentResponse::set_request_message_id(::google::protobuf::int64 value) {
  
  request_message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.UnsentResponse.request_message_id)
}

// optional int32 len = 3;
inline void UnsentResponse::clear_len() {
  len_ = 0;
}
inline ::google::protobuf::int32 UnsentResponse::len() const {
  // @@protoc_insertion_point(field_get:zproto.UnsentResponse.len)
  return len_;
}
inline void UnsentResponse::set_len(::google::protobuf::int32 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:zproto.UnsentResponse.len)
}

// -------------------------------------------------------------------

// RequestResend

// optional int64 message_id = 1;
inline void RequestResend::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestResend::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.RequestResend.message_id)
  return message_id_;
}
inline void RequestResend::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.RequestResend.message_id)
}

// -------------------------------------------------------------------

// NewSession

// optional int64 session_id = 1;
inline void NewSession::clear_session_id() {
  session_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NewSession::session_id() const {
  // @@protoc_insertion_point(field_get:zproto.NewSession.session_id)
  return session_id_;
}
inline void NewSession::set_session_id(::google::protobuf::int64 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.NewSession.session_id)
}

// optional int64 message_id = 2;
inline void NewSession::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NewSession::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.NewSession.message_id)
  return message_id_;
}
inline void NewSession::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.NewSession.message_id)
}

// -------------------------------------------------------------------

// SessionHello

// -------------------------------------------------------------------

// SessionLost

// -------------------------------------------------------------------

// Container

// repeated bytes data = 1;
inline int Container::data_size() const {
  return data_.size();
}
inline void Container::clear_data() {
  data_.Clear();
}
inline const ::std::string& Container::data(int index) const {
  // @@protoc_insertion_point(field_get:zproto.Container.data)
  return data_.Get(index);
}
inline ::std::string* Container::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.Container.data)
  return data_.Mutable(index);
}
inline void Container::set_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:zproto.Container.data)
  data_.Mutable(index)->assign(value);
}
inline void Container::set_data(int index, const char* value) {
  data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:zproto.Container.data)
}
inline void Container::set_data(int index, const void* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:zproto.Container.data)
}
inline ::std::string* Container::add_data() {
  // @@protoc_insertion_point(field_add_mutable:zproto.Container.data)
  return data_.Add();
}
inline void Container::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:zproto.Container.data)
}
inline void Container::add_data(const char* value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:zproto.Container.data)
}
inline void Container::add_data(const void* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:zproto.Container.data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Container::data() const {
  // @@protoc_insertion_point(field_list:zproto.Container.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Container::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:zproto.Container.data)
  return &data_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zproto_5ftransport_2eproto__INCLUDED
