// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zproto_connection.proto

#ifndef PROTOBUF_zproto_5fconnection_2eproto__INCLUDED
#define PROTOBUF_zproto_5fconnection_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace zproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_zproto_5fconnection_2eproto();
void protobuf_AssignDesc_zproto_5fconnection_2eproto();
void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

class Ack;
class Drop;
class Frame;
class Handshake;
class HandshakeResponse;
class Ping;
class Pong;
class Redirect;

// ===================================================================

class Frame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Frame) */ {
 public:
  Frame();
  virtual ~Frame();

  Frame(const Frame& from);

  inline Frame& operator=(const Frame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Frame& default_instance();

  void Swap(Frame* other);

  // implements Message ----------------------------------------------

  inline Frame* New() const { return New(NULL); }

  Frame* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 package_index = 1;
  void clear_package_index();
  static const int kPackageIndexFieldNumber = 1;
  ::google::protobuf::int32 package_index() const;
  void set_package_index(::google::protobuf::int32 value);

  // optional int32 header = 2;
  void clear_header();
  static const int kHeaderFieldNumber = 2;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional bytes body = 3;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional int32 crc32 = 4;
  void clear_crc32();
  static const int kCrc32FieldNumber = 4;
  ::google::protobuf::int32 crc32() const;
  void set_crc32(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zproto.Frame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 package_index_;
  ::google::protobuf::int32 header_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::int32 crc32_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5fconnection_2eproto();
  friend void protobuf_AssignDesc_zproto_5fconnection_2eproto();
  friend void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

  void InitAsDefaultInstance();
  static Frame* default_instance_;
};
// -------------------------------------------------------------------

class Ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Ping) */ {
 public:
  Ping();
  virtual ~Ping();

  Ping(const Ping& from);

  inline Ping& operator=(const Ping& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ping& default_instance();

  void Swap(Ping* other);

  // implements Message ----------------------------------------------

  inline Ping* New() const { return New(NULL); }

  Ping* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes random_bytes = 1;
  void clear_random_bytes();
  static const int kRandomBytesFieldNumber = 1;
  const ::std::string& random_bytes() const;
  void set_random_bytes(const ::std::string& value);
  void set_random_bytes(const char* value);
  void set_random_bytes(const void* value, size_t size);
  ::std::string* mutable_random_bytes();
  ::std::string* release_random_bytes();
  void set_allocated_random_bytes(::std::string* random_bytes);

  // @@protoc_insertion_point(class_scope:zproto.Ping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr random_bytes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5fconnection_2eproto();
  friend void protobuf_AssignDesc_zproto_5fconnection_2eproto();
  friend void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

  void InitAsDefaultInstance();
  static Ping* default_instance_;
};
// -------------------------------------------------------------------

class Pong : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Pong) */ {
 public:
  Pong();
  virtual ~Pong();

  Pong(const Pong& from);

  inline Pong& operator=(const Pong& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pong& default_instance();

  void Swap(Pong* other);

  // implements Message ----------------------------------------------

  inline Pong* New() const { return New(NULL); }

  Pong* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Pong* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes random_bytes = 1;
  void clear_random_bytes();
  static const int kRandomBytesFieldNumber = 1;
  const ::std::string& random_bytes() const;
  void set_random_bytes(const ::std::string& value);
  void set_random_bytes(const char* value);
  void set_random_bytes(const void* value, size_t size);
  ::std::string* mutable_random_bytes();
  ::std::string* release_random_bytes();
  void set_allocated_random_bytes(::std::string* random_bytes);

  // @@protoc_insertion_point(class_scope:zproto.Pong)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr random_bytes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5fconnection_2eproto();
  friend void protobuf_AssignDesc_zproto_5fconnection_2eproto();
  friend void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

  void InitAsDefaultInstance();
  static Pong* default_instance_;
};
// -------------------------------------------------------------------

class Drop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Drop) */ {
 public:
  Drop();
  virtual ~Drop();

  Drop(const Drop& from);

  inline Drop& operator=(const Drop& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Drop& default_instance();

  void Swap(Drop* other);

  // implements Message ----------------------------------------------

  inline Drop* New() const { return New(NULL); }

  Drop* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Drop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::int64 message_id() const;
  void set_message_id(::google::protobuf::int64 value);

  // optional int32 error_code = 2;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // optional string error_message = 3;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 3;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // @@protoc_insertion_point(class_scope:zproto.Drop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 message_id_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::int32 error_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5fconnection_2eproto();
  friend void protobuf_AssignDesc_zproto_5fconnection_2eproto();
  friend void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

  void InitAsDefaultInstance();
  static Drop* default_instance_;
};
// -------------------------------------------------------------------

class Redirect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Redirect) */ {
 public:
  Redirect();
  virtual ~Redirect();

  Redirect(const Redirect& from);

  inline Redirect& operator=(const Redirect& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Redirect& default_instance();

  void Swap(Redirect* other);

  // implements Message ----------------------------------------------

  inline Redirect* New() const { return New(NULL); }

  Redirect* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Redirect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 1;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional int32 timeout = 3;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 3;
  ::google::protobuf::int32 timeout() const;
  void set_timeout(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zproto.Redirect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 timeout_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5fconnection_2eproto();
  friend void protobuf_AssignDesc_zproto_5fconnection_2eproto();
  friend void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

  void InitAsDefaultInstance();
  static Redirect* default_instance_;
};
// -------------------------------------------------------------------

class Ack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Ack) */ {
 public:
  Ack();
  virtual ~Ack();

  Ack(const Ack& from);

  inline Ack& operator=(const Ack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ack& default_instance();

  void Swap(Ack* other);

  // implements Message ----------------------------------------------

  inline Ack* New() const { return New(NULL); }

  Ack* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 received_aackage_index = 1;
  void clear_received_aackage_index();
  static const int kReceivedAackageIndexFieldNumber = 1;
  ::google::protobuf::int32 received_aackage_index() const;
  void set_received_aackage_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zproto.Ack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 received_aackage_index_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5fconnection_2eproto();
  friend void protobuf_AssignDesc_zproto_5fconnection_2eproto();
  friend void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

  void InitAsDefaultInstance();
  static Ack* default_instance_;
};
// -------------------------------------------------------------------

class Handshake : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Handshake) */ {
 public:
  Handshake();
  virtual ~Handshake();

  Handshake(const Handshake& from);

  inline Handshake& operator=(const Handshake& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Handshake& default_instance();

  void Swap(Handshake* other);

  // implements Message ----------------------------------------------

  inline Handshake* New() const { return New(NULL); }

  Handshake* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Handshake* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proto_revision = 1;
  void clear_proto_revision();
  static const int kProtoRevisionFieldNumber = 1;
  ::google::protobuf::int32 proto_revision() const;
  void set_proto_revision(::google::protobuf::int32 value);

  // optional int32 api_major_version = 2;
  void clear_api_major_version();
  static const int kApiMajorVersionFieldNumber = 2;
  ::google::protobuf::int32 api_major_version() const;
  void set_api_major_version(::google::protobuf::int32 value);

  // optional int32 api_minor_version = 3;
  void clear_api_minor_version();
  static const int kApiMinorVersionFieldNumber = 3;
  ::google::protobuf::int32 api_minor_version() const;
  void set_api_minor_version(::google::protobuf::int32 value);

  // optional bytes random_bytes = 4;
  void clear_random_bytes();
  static const int kRandomBytesFieldNumber = 4;
  const ::std::string& random_bytes() const;
  void set_random_bytes(const ::std::string& value);
  void set_random_bytes(const char* value);
  void set_random_bytes(const void* value, size_t size);
  ::std::string* mutable_random_bytes();
  ::std::string* release_random_bytes();
  void set_allocated_random_bytes(::std::string* random_bytes);

  // @@protoc_insertion_point(class_scope:zproto.Handshake)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 proto_revision_;
  ::google::protobuf::int32 api_major_version_;
  ::google::protobuf::internal::ArenaStringPtr random_bytes_;
  ::google::protobuf::int32 api_minor_version_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5fconnection_2eproto();
  friend void protobuf_AssignDesc_zproto_5fconnection_2eproto();
  friend void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

  void InitAsDefaultInstance();
  static Handshake* default_instance_;
};
// -------------------------------------------------------------------

class HandshakeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.HandshakeResponse) */ {
 public:
  HandshakeResponse();
  virtual ~HandshakeResponse();

  HandshakeResponse(const HandshakeResponse& from);

  inline HandshakeResponse& operator=(const HandshakeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandshakeResponse& default_instance();

  void Swap(HandshakeResponse* other);

  // implements Message ----------------------------------------------

  inline HandshakeResponse* New() const { return New(NULL); }

  HandshakeResponse* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HandshakeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proto_revision = 1;
  void clear_proto_revision();
  static const int kProtoRevisionFieldNumber = 1;
  ::google::protobuf::int32 proto_revision() const;
  void set_proto_revision(::google::protobuf::int32 value);

  // optional int32 api_major_version = 2;
  void clear_api_major_version();
  static const int kApiMajorVersionFieldNumber = 2;
  ::google::protobuf::int32 api_major_version() const;
  void set_api_major_version(::google::protobuf::int32 value);

  // optional int32 api_minor_version = 3;
  void clear_api_minor_version();
  static const int kApiMinorVersionFieldNumber = 3;
  ::google::protobuf::int32 api_minor_version() const;
  void set_api_minor_version(::google::protobuf::int32 value);

  // optional bytes sha1 = 4;
  void clear_sha1();
  static const int kSha1FieldNumber = 4;
  const ::std::string& sha1() const;
  void set_sha1(const ::std::string& value);
  void set_sha1(const char* value);
  void set_sha1(const void* value, size_t size);
  ::std::string* mutable_sha1();
  ::std::string* release_sha1();
  void set_allocated_sha1(::std::string* sha1);

  // @@protoc_insertion_point(class_scope:zproto.HandshakeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 proto_revision_;
  ::google::protobuf::int32 api_major_version_;
  ::google::protobuf::internal::ArenaStringPtr sha1_;
  ::google::protobuf::int32 api_minor_version_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_zproto_5fconnection_2eproto();
  friend void protobuf_AssignDesc_zproto_5fconnection_2eproto();
  friend void protobuf_ShutdownFile_zproto_5fconnection_2eproto();

  void InitAsDefaultInstance();
  static HandshakeResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Frame

// optional int32 package_index = 1;
inline void Frame::clear_package_index() {
  package_index_ = 0;
}
inline ::google::protobuf::int32 Frame::package_index() const {
  // @@protoc_insertion_point(field_get:zproto.Frame.package_index)
  return package_index_;
}
inline void Frame::set_package_index(::google::protobuf::int32 value) {
  
  package_index_ = value;
  // @@protoc_insertion_point(field_set:zproto.Frame.package_index)
}

// optional int32 header = 2;
inline void Frame::clear_header() {
  header_ = 0;
}
inline ::google::protobuf::int32 Frame::header() const {
  // @@protoc_insertion_point(field_get:zproto.Frame.header)
  return header_;
}
inline void Frame::set_header(::google::protobuf::int32 value) {
  
  header_ = value;
  // @@protoc_insertion_point(field_set:zproto.Frame.header)
}

// optional bytes body = 3;
inline void Frame::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Frame::body() const {
  // @@protoc_insertion_point(field_get:zproto.Frame.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Frame::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Frame.body)
}
inline void Frame::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Frame.body)
}
inline void Frame::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Frame.body)
}
inline ::std::string* Frame::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Frame.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Frame::release_body() {
  // @@protoc_insertion_point(field_release:zproto.Frame.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Frame::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:zproto.Frame.body)
}

// optional int32 crc32 = 4;
inline void Frame::clear_crc32() {
  crc32_ = 0;
}
inline ::google::protobuf::int32 Frame::crc32() const {
  // @@protoc_insertion_point(field_get:zproto.Frame.crc32)
  return crc32_;
}
inline void Frame::set_crc32(::google::protobuf::int32 value) {
  
  crc32_ = value;
  // @@protoc_insertion_point(field_set:zproto.Frame.crc32)
}

// -------------------------------------------------------------------

// Ping

// optional bytes random_bytes = 1;
inline void Ping::clear_random_bytes() {
  random_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ping::random_bytes() const {
  // @@protoc_insertion_point(field_get:zproto.Ping.random_bytes)
  return random_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ping::set_random_bytes(const ::std::string& value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Ping.random_bytes)
}
inline void Ping::set_random_bytes(const char* value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Ping.random_bytes)
}
inline void Ping::set_random_bytes(const void* value, size_t size) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Ping.random_bytes)
}
inline ::std::string* Ping::mutable_random_bytes() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Ping.random_bytes)
  return random_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ping::release_random_bytes() {
  // @@protoc_insertion_point(field_release:zproto.Ping.random_bytes)
  
  return random_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ping::set_allocated_random_bytes(::std::string* random_bytes) {
  if (random_bytes != NULL) {
    
  } else {
    
  }
  random_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), random_bytes);
  // @@protoc_insertion_point(field_set_allocated:zproto.Ping.random_bytes)
}

// -------------------------------------------------------------------

// Pong

// optional bytes random_bytes = 1;
inline void Pong::clear_random_bytes() {
  random_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Pong::random_bytes() const {
  // @@protoc_insertion_point(field_get:zproto.Pong.random_bytes)
  return random_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Pong::set_random_bytes(const ::std::string& value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Pong.random_bytes)
}
inline void Pong::set_random_bytes(const char* value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Pong.random_bytes)
}
inline void Pong::set_random_bytes(const void* value, size_t size) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Pong.random_bytes)
}
inline ::std::string* Pong::mutable_random_bytes() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Pong.random_bytes)
  return random_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Pong::release_random_bytes() {
  // @@protoc_insertion_point(field_release:zproto.Pong.random_bytes)
  
  return random_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Pong::set_allocated_random_bytes(::std::string* random_bytes) {
  if (random_bytes != NULL) {
    
  } else {
    
  }
  random_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), random_bytes);
  // @@protoc_insertion_point(field_set_allocated:zproto.Pong.random_bytes)
}

// -------------------------------------------------------------------

// Drop

// optional int64 message_id = 1;
inline void Drop::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Drop::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.Drop.message_id)
  return message_id_;
}
inline void Drop::set_message_id(::google::protobuf::int64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.Drop.message_id)
}

// optional int32 error_code = 2;
inline void Drop::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 Drop::error_code() const {
  // @@protoc_insertion_point(field_get:zproto.Drop.error_code)
  return error_code_;
}
inline void Drop::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:zproto.Drop.error_code)
}

// optional string error_message = 3;
inline void Drop::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Drop::error_message() const {
  // @@protoc_insertion_point(field_get:zproto.Drop.error_message)
  return error_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Drop::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Drop.error_message)
}
inline void Drop::set_error_message(const char* value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Drop.error_message)
}
inline void Drop::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Drop.error_message)
}
inline ::std::string* Drop::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Drop.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Drop::release_error_message() {
  // @@protoc_insertion_point(field_release:zproto.Drop.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Drop::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:zproto.Drop.error_message)
}

// -------------------------------------------------------------------

// Redirect

// optional string host = 1;
inline void Redirect::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Redirect::host() const {
  // @@protoc_insertion_point(field_get:zproto.Redirect.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Redirect::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Redirect.host)
}
inline void Redirect::set_host(const char* value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Redirect.host)
}
inline void Redirect::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Redirect.host)
}
inline ::std::string* Redirect::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Redirect.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Redirect::release_host() {
  // @@protoc_insertion_point(field_release:zproto.Redirect.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Redirect::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:zproto.Redirect.host)
}

// optional int32 port = 2;
inline void Redirect::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 Redirect::port() const {
  // @@protoc_insertion_point(field_get:zproto.Redirect.port)
  return port_;
}
inline void Redirect::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:zproto.Redirect.port)
}

// optional int32 timeout = 3;
inline void Redirect::clear_timeout() {
  timeout_ = 0;
}
inline ::google::protobuf::int32 Redirect::timeout() const {
  // @@protoc_insertion_point(field_get:zproto.Redirect.timeout)
  return timeout_;
}
inline void Redirect::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:zproto.Redirect.timeout)
}

// -------------------------------------------------------------------

// Ack

// optional int32 received_aackage_index = 1;
inline void Ack::clear_received_aackage_index() {
  received_aackage_index_ = 0;
}
inline ::google::protobuf::int32 Ack::received_aackage_index() const {
  // @@protoc_insertion_point(field_get:zproto.Ack.received_aackage_index)
  return received_aackage_index_;
}
inline void Ack::set_received_aackage_index(::google::protobuf::int32 value) {
  
  received_aackage_index_ = value;
  // @@protoc_insertion_point(field_set:zproto.Ack.received_aackage_index)
}

// -------------------------------------------------------------------

// Handshake

// optional int32 proto_revision = 1;
inline void Handshake::clear_proto_revision() {
  proto_revision_ = 0;
}
inline ::google::protobuf::int32 Handshake::proto_revision() const {
  // @@protoc_insertion_point(field_get:zproto.Handshake.proto_revision)
  return proto_revision_;
}
inline void Handshake::set_proto_revision(::google::protobuf::int32 value) {
  
  proto_revision_ = value;
  // @@protoc_insertion_point(field_set:zproto.Handshake.proto_revision)
}

// optional int32 api_major_version = 2;
inline void Handshake::clear_api_major_version() {
  api_major_version_ = 0;
}
inline ::google::protobuf::int32 Handshake::api_major_version() const {
  // @@protoc_insertion_point(field_get:zproto.Handshake.api_major_version)
  return api_major_version_;
}
inline void Handshake::set_api_major_version(::google::protobuf::int32 value) {
  
  api_major_version_ = value;
  // @@protoc_insertion_point(field_set:zproto.Handshake.api_major_version)
}

// optional int32 api_minor_version = 3;
inline void Handshake::clear_api_minor_version() {
  api_minor_version_ = 0;
}
inline ::google::protobuf::int32 Handshake::api_minor_version() const {
  // @@protoc_insertion_point(field_get:zproto.Handshake.api_minor_version)
  return api_minor_version_;
}
inline void Handshake::set_api_minor_version(::google::protobuf::int32 value) {
  
  api_minor_version_ = value;
  // @@protoc_insertion_point(field_set:zproto.Handshake.api_minor_version)
}

// optional bytes random_bytes = 4;
inline void Handshake::clear_random_bytes() {
  random_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Handshake::random_bytes() const {
  // @@protoc_insertion_point(field_get:zproto.Handshake.random_bytes)
  return random_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Handshake::set_random_bytes(const ::std::string& value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Handshake.random_bytes)
}
inline void Handshake::set_random_bytes(const char* value) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Handshake.random_bytes)
}
inline void Handshake::set_random_bytes(const void* value, size_t size) {
  
  random_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Handshake.random_bytes)
}
inline ::std::string* Handshake::mutable_random_bytes() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Handshake.random_bytes)
  return random_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Handshake::release_random_bytes() {
  // @@protoc_insertion_point(field_release:zproto.Handshake.random_bytes)
  
  return random_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Handshake::set_allocated_random_bytes(::std::string* random_bytes) {
  if (random_bytes != NULL) {
    
  } else {
    
  }
  random_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), random_bytes);
  // @@protoc_insertion_point(field_set_allocated:zproto.Handshake.random_bytes)
}

// -------------------------------------------------------------------

// HandshakeResponse

// optional int32 proto_revision = 1;
inline void HandshakeResponse::clear_proto_revision() {
  proto_revision_ = 0;
}
inline ::google::protobuf::int32 HandshakeResponse::proto_revision() const {
  // @@protoc_insertion_point(field_get:zproto.HandshakeResponse.proto_revision)
  return proto_revision_;
}
inline void HandshakeResponse::set_proto_revision(::google::protobuf::int32 value) {
  
  proto_revision_ = value;
  // @@protoc_insertion_point(field_set:zproto.HandshakeResponse.proto_revision)
}

// optional int32 api_major_version = 2;
inline void HandshakeResponse::clear_api_major_version() {
  api_major_version_ = 0;
}
inline ::google::protobuf::int32 HandshakeResponse::api_major_version() const {
  // @@protoc_insertion_point(field_get:zproto.HandshakeResponse.api_major_version)
  return api_major_version_;
}
inline void HandshakeResponse::set_api_major_version(::google::protobuf::int32 value) {
  
  api_major_version_ = value;
  // @@protoc_insertion_point(field_set:zproto.HandshakeResponse.api_major_version)
}

// optional int32 api_minor_version = 3;
inline void HandshakeResponse::clear_api_minor_version() {
  api_minor_version_ = 0;
}
inline ::google::protobuf::int32 HandshakeResponse::api_minor_version() const {
  // @@protoc_insertion_point(field_get:zproto.HandshakeResponse.api_minor_version)
  return api_minor_version_;
}
inline void HandshakeResponse::set_api_minor_version(::google::protobuf::int32 value) {
  
  api_minor_version_ = value;
  // @@protoc_insertion_point(field_set:zproto.HandshakeResponse.api_minor_version)
}

// optional bytes sha1 = 4;
inline void HandshakeResponse::clear_sha1() {
  sha1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HandshakeResponse::sha1() const {
  // @@protoc_insertion_point(field_get:zproto.HandshakeResponse.sha1)
  return sha1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandshakeResponse::set_sha1(const ::std::string& value) {
  
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.HandshakeResponse.sha1)
}
inline void HandshakeResponse::set_sha1(const char* value) {
  
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.HandshakeResponse.sha1)
}
inline void HandshakeResponse::set_sha1(const void* value, size_t size) {
  
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.HandshakeResponse.sha1)
}
inline ::std::string* HandshakeResponse::mutable_sha1() {
  
  // @@protoc_insertion_point(field_mutable:zproto.HandshakeResponse.sha1)
  return sha1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandshakeResponse::release_sha1() {
  // @@protoc_insertion_point(field_release:zproto.HandshakeResponse.sha1)
  
  return sha1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandshakeResponse::set_allocated_sha1(::std::string* sha1) {
  if (sha1 != NULL) {
    
  } else {
    
  }
  sha1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha1);
  // @@protoc_insertion_point(field_set_allocated:zproto.HandshakeResponse.sha1)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zproto_5fconnection_2eproto__INCLUDED
